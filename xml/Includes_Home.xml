<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="GenresLayout">
		<param name="focused">false</param>
		<definition>
			<control type="group">
				<control type="image">
					<left>-22</left>
					<top>-22</top>
					<width>425</width>
					<height>273</height>
					<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-genre-nolabel.png</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
					<aspectratio>stretch</aspectratio>
					<visible>Skin.HasSetting(show_borders) + String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="image">
					<top>-20</top>
					<left>-20</left>
					<width>421</width>
					<height>269</height>
					<texture>dialogs/dialog-bg-nobo.png</texture>
					<bordersize>20</bordersize>
					<visible>Skin.HasSetting(show_borders) + String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="image">
					<top>-20</top>
					<left>-20</left>
					<width>421</width>
					<height>269</height>
					<texture>dialogs/dialog-bg-nobo.png</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
					<visible>!Skin.HasSetting(show_borders) + String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="image">
					<top>-20</top>
					<left>-20</left>
					<width>421</width>
					<height>269</height>
					<texture>dialogs/dialog-bg-nobo.png</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
					<visible>!String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="image">
					<top>-26</top>
					<left>-26</left>
					<width>433</width>
					<height>281</height>
					<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
					<bordertexture border="21">overlays/shadow.png</bordertexture>
					<bordersize>20</bordersize>
					<visible>$PARAM[focused] + Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type="image">
					<top>-26</top>
					<left>-26</left>
					<width>433</width>
					<height>281</height>
					<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
					<bordersize>20</bordersize>
					<visible>$PARAM[focused] + Control.HasFocus($PARAM[list_id])</visible>
					<visible>Skin.HasSetting(EnableGradientColor)</visible>
				</control>
				<control type="label">
					<left>6</left>
					<top>175</top>
					<width>371</width>
					<height>54</height>
					<font>font27</font>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Label]</label>
					<autoscroll>$PARAM[focused]</autoscroll>
				</control>
				<control type="image">
					<left>6</left>
					<top>11</top>
					<width>371</width>
					<height>169</height>
					<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + String.IsEqual(listitem.dbtype,genre)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>381</width>
					<height>169</height>
					<texture fallback="DefaultVideo.png">$VAR[InfoWidgetThumbVar]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + !String.IsEqual(listitem.dbtype,genre)</visible>
					<visible>!String.IsEqual(listitem.dbtype,episode)</visible>
					<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>381</width>
					<height>229</height>
					<texture fallback="DefaultVideo.png">$VAR[InfoWidgetThumbVar]</texture>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + !String.IsEqual(listitem.dbtype,genre)</visible>
					<visible>!String.IsEqual(listitem.dbtype,episode)</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="image">
					<top>55</top>
					<left>30</left>
					<width>321</width>
					<height>124</height>
					<texture background="true">$VAR[LibraryClearLogoVar]</texture>
					<aspectratio aligny="center" align="left">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + !String.IsEqual(listitem.dbtype,episode)</visible>
					<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>381</width>
					<height>169</height>
					<texture fallback="DefaultVideo.png">$VAR[InfoWidgetThumbVar2]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + !String.IsEqual(listitem.dbtype,genre)</visible>
					<visible>String.IsEqual(listitem.dbtype,episode)</visible>
					<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>381</width>
					<height>229</height>
					<texture fallback="DefaultVideo.png">$VAR[InfoWidgetThumbVar2]</texture>
					<aspectratio align="center" aligny="center">scale</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + !String.IsEqual(listitem.dbtype,genre)</visible>
					<visible>String.IsEqual(listitem.dbtype,episode)</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>144</width>
					<height>58</height>
					<texture colordiffuse="4DFFFFFF">dialogs/clearlogo-widget-back.png</texture>
					<aspectratio align="left" aligny="top">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
					<visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(hide_thumbforspoiler)</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					<visible>![String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo))]</visible>
				</control>
				<control type="image">
					<left>2</left>
					<top>2</top>
					<width>140</width>
					<height>54</height>
					<texture background="true">$VAR[LibraryClearLogoVar]</texture>
					<aspectratio align="left" aligny="top">keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
					<visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(hide_thumbforspoiler)</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="image">
					<left>221</left>
					<top>159</top>
					<width>160</width>
					<height>70</height>
					<texture flipx="true">overlays/overlay-bg.png</texture>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + String.IsEqual(listitem.dbtype,episode)</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="label">
					<left>116</left>
					<top>199</top>
					<width>260</width>
					<label>$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</label>
					<font>font20_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<align>right</align>
					<visible>String.IsEmpty(ListItem.Art(poster.0)) + String.IsEqual(listitem.dbtype,episode)</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>159</top>
					<width>160</width>
					<height>70</height>
					<texture>overlays/overlay-bg.png</texture>
					<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
					<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>196</top>
					<width>32</width>
					<height>32</height>
					<texture>$VAR[WallWatchedIconVar]</texture>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
					<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
					<animation effect="slide" end="0,-54" time="0" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				</control>
				<control type="image">
					<top>0</top>
					<left>0</left>
					<width>381</width>
					<height>229</height>
					<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
					<visible>!$PARAM[focused]</visible>
					<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Window.IsVisible(Home) + !Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="image">
					<top>-2</top>
					<left>-2</left>
					<width>385</width>
					<height>233</height>
					<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
					<visible>!$PARAM[focused]</visible>
					<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Window.IsVisible(Home) + Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>239</top>
					<width>381</width>
					<height>4</height>
					<texture>dialogs/back.png</texture>
					<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="progress">
					<left>0</left>
					<top>210</top>
					<width>381</width>
					<height>1</height>
					<texturebg></texturebg>
					<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
					<info>ListItem.PercentPlayed</info>
					<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>239</top>
					<width>381</width>
					<height>4</height>
					<texture>dialogs/back.png</texture>
					<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="progress">
					<left>0</left>
					<top>210</top>
					<width>381</width>
					<height>1</height>
					<texturebg></texturebg>
					<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
					<info>ListItem.Progress</info>
					<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
				</control>
				<control type="group">
					<left>165.5</left>
					<top>-19</top>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
					<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
				</control>
				<control type="group">
					<left>165.5</left>
					<top>-19</top>
					<visible>String.IsEmpty(ListItem.Art(poster.0))</visible>
					<visible>!$PARAM[focused]</visible>
					<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Window.IsVisible(Home)</visible>
					<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
				</control>
				<control type="group">
					<left>6</left>
					<top>6</top>
					<visible>!Skin.HasSetting(show_borders) + !String.IsEmpty(ListItem.Art(poster.0))</visible>
					<control type="image">
						<left>0</left>
						<width>119</width>
						<height>169</height>
						<texture background="true" fallback="DefaultVideo.png">$INFO[ListItem.Art(poster.0)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<left>125</left>
						<width>119</width>
						<height>169</height>
						<texture background="true" fallback="DefaultVideo.png">$INFO[ListItem.Art(poster.1)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<left>250</left>
						<width>119</width>
						<height>169</height>
						<texture background="true" fallback="DefaultVideo.png">$INFO[ListItem.Art(poster.2)]</texture>
						<aspectratio>scale</aspectratio>
					</control>
				</control>
				<control type="group">
					<left>6</left>
					<top>6</top>
					<visible>Skin.HasSetting(show_borders) + !String.IsEmpty(ListItem.Art(poster.0))</visible>
					<control type="image">
						<left>0</left>
						<width>119</width>
						<height>169</height>
						<texture background="true" fallback="DefaultVideo.png">$INFO[ListItem.Art(poster.0)]</texture>
						<aspectratio>scale</aspectratio>
						<bordertexture colordiffuse="$VAR[BorderColorVar]">colors/white.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
					<control type="image">
						<left>125</left>
						<width>119</width>
						<height>169</height>
						<texture background="true" fallback="DefaultVideo.png">$INFO[ListItem.Art(poster.1)]</texture>
						<aspectratio>scale</aspectratio>
						<bordertexture colordiffuse="$VAR[BorderColorVar]">colors/white.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
					<control type="image">
						<left>250</left>
						<width>119</width>
						<height>169</height>
						<texture background="true" fallback="DefaultVideo.png">$INFO[ListItem.Art(poster.2)]</texture>
						<aspectratio>scale</aspectratio>
						<bordertexture colordiffuse="$VAR[BorderColorVar]">colors/white.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="WidgetListGenres">
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="190"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>0</left>
				<top>71</top>
				<right>0</right>
				<height>415</height>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="415">
					<control type="group">
						<left>80</left>
						<top>64</top>
						<include content="GenresLayout">
							<param name="focused" value="false" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="415">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>80</left>
						<top>64</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="GenresLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="1000">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetPanelGenres">
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="190"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>0</left>
				<top>115</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>965</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<onleft>9000</onleft>
				<onback>9000</onback>
				<onright/>
				<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<itemlayout width="415" height="270">
					<control type="group">
						<left>80</left>
						<top>20</top>
						<include content="GenresLayout">
							<param name="focused" value="false" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="415" height="270">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>80</left>
						<top>20</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="GenresLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="1000">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<include name="PersonalWidgetListCategoriesBig2">
		<control type="group" id="42900666">
			<left>55</left>
			<top>80</top>
			<height>90</height>
			<right>55</right>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<left>2</left>
				<top>13</top>
				<width>11</width>
				<height>11</height>
				<texture colordiffuse="$VAR[SkinColorVar]">frame/puce.png</texture>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[40315]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[40315]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>!Control.HasFocus(42900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[40315]$INFO[Container(42900).ListItem.Label, | ]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Control.HasFocus(42900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
		</control>
		<control type="group" id="42900599">
			<height>160</height>
			<left>180</left>
			<visible>Container(42900).IsUpdating + !Integer.IsGreater(Container(42900).NumItems,0)</visible>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
			</control>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture>dialogs/extendedprogress/loading.png</texture>
				<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
			</control>
		</control>
		<control type="panel" id="42900">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<orientation>vertical</orientation>
			<height>500</height>
            <width>1320</width>
			<include content="WidgetListCommon">
				<param name="list_id" value="42900"/>
			</include>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<itemlayout width="310" height="340">
				<control type="group">
					<left>70</left>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="310" height="340">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="228,70" />
						<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="228,70" />
					</animation>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<autoscroll delay="1000" time="1000" repeat="1000">true</autoscroll>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>


	<include name="PersonalWidgetListCategoriesBig">
		<control type="group" id="22900666">
			<left>55</left>
			<top>80</top>
			<height>90</height>
			<right>55</right>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu2))</visible>
			<control type="image">
				<left>2</left>
				<top>13</top>
				<width>11</width>
				<height>11</height>
				<texture colordiffuse="$VAR[SkinColorVar]">frame/puce.png</texture>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[31148]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[31148]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>!Control.HasFocus(22900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[31148]$INFO[Container(22900).ListItem.Label, | ]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Control.HasFocus(22900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
		</control>
		<control type="group" id="22900599">
			<height>160</height>
			<left>180</left>
			<visible>Container(22900).IsUpdating + !Integer.IsGreater(Container(22900).NumItems,0)</visible>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu2))</visible>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
			</control>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture>dialogs/extendedprogress/loading.png</texture>
				<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
			</control>
		</control>
		<control type="panel" id="22900">
			<left>-10</left>
			<top>110</top>
			<right>10</right>
			<height>290</height>
            <width>1320</width>
			<include content="WidgetListCommon">
				<param name="list_id" value="22900"/>
			</include>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu2))</visible>
			<itemlayout width="310" height="340">
				<control type="group">
					<left>70</left>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="310" height="340">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="228,70" />
						<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="228,70" />
					</animation>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<autoscroll delay="1000" time="1000" repeat="1000">true</autoscroll>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu-1</include>
			</content>
		</control>
	</include>

	<include name="PersonalWidgetPanelCategoriesBig2">
		<control type="group" id="43900666">
			<left>55</left>
			<top>80</top>
			<height>90</height>
			<right>55</right>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<left>2</left>
				<top>13</top>
				<width>11</width>
				<height>11</height>
				<texture colordiffuse="$VAR[SkinColorVar]">frame/puce.png</texture>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[40315]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[40315]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>!Control.HasFocus(43900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[40315]$INFO[Container(43900).ListItem.Label, | ]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Control.HasFocus(43900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
		</control>
		<control type="group" id="43900599">
			<height>160</height>
			<left>180</left>
			<visible>Container(43900).IsUpdating + !Integer.IsGreater(Container(43900).NumItems,0)</visible>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
			</control>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture>dialogs/extendedprogress/loading.png</texture>
				<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
			</control>
		</control>
		<control type="panel" id="43900">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<orientation>vertical</orientation>
			<height>720</height>
            <width>1520</width>
			<include content="WidgetListCommon">
				<param name="list_id" value="43900"/>
			</include>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<itemlayout width="310" height="200">
				<control type="group">
					<left>70</left>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="310" height="340">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="228,70" />
						<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="228,70" />
					</animation>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<autoscroll delay="1000" time="1000" repeat="1000">true</autoscroll>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>

	<include name="PersonalWidgetPanelCategoriesBig">
		<control type="group" id="§23900666">
			<left>55</left>
			<top>80</top>
			<height>90</height>
			<right>55</right>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu2))</visible>
			<control type="image">
				<left>2</left>
				<top>13</top>
				<width>11</width>
				<height>11</height>
				<texture colordiffuse="$VAR[SkinColorVar]">frame/puce.png</texture>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[31148]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[31148]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>!Control.HasFocus(23900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$LOCALIZE[31148]$INFO[Container(23900).ListItem.Label, | ]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<visible>Control.HasFocus(23900) + !Skin.HasSetting(HideWidgetLabels)</visible>
			</control>
		</control>
		<control type="group" id="23900599">
			<height>160</height>
			<left>180</left>
			<visible>Container(23900).IsUpdating + !Integer.IsGreater(Container(23900).NumItems,0)</visible>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu2))</visible>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
			</control>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture>dialogs/extendedprogress/loading.png</texture>
				<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
			</control>
		</control>
		<control type="panel" id="23900">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<height>290</height>
            <width>1320</width>
			<include content="WidgetListCommon">
				<param name="list_id" value="23900"/>
			</include>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>!Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu2))</visible>
			<itemlayout width="310" height="340">
				<control type="group">
					<left>70</left>
                    <control type="image">
						<width>316</width>
						<height>200</height>
						<texture background="true">$INFO[ListItem.Property(background)]</texture>
						<aspectratio>scale</aspectratio>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="310" height="340">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="228,70" />
						<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="228,70" />
					</animation>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<autoscroll delay="1000" time="1000" repeat="1000">true</autoscroll>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu-1</include>
			</content>
		</control>
	</include>
	<include name="PersonalWidgetListCategoriesSmall">
		<control type="group" id="229001666">
			<left>55</left>
			<top>80</top>
			<height>90</height>
			<right>55</right>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<left>2</left>
				<top>13</top>
				<width>11</width>
				<height>11</height>
				<texture colordiffuse="$VAR[SkinColorVar]">frame/puce.png</texture>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$VAR[LabelCategoriesSmallVar]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
			</control>
		</control>
		<control type="group" id="229001599">
			<height>160</height>
			<left>180</left>
			<visible>Container(229001).IsUpdating + !Integer.IsGreater(Container(229001).NumItems,0)</visible>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
			</control>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture>dialogs/extendedprogress/loading.png</texture>
				<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
			</control>
		</control>
		<control type="panel" id="229001">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<height>220</height>
			<include content="WidgetListCommon">
				<param name="list_id" value="229001"/>
			</include>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetList)</visible>
			<visible>Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<itemlayout width="122.4" height="220">
				<control type="group">
					<left>70</left>
					<control type="image">
						<width>140</width>
						<height>120</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>20</top>
						<left>30</left>
						<width>80</width>
						<height>80</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="122.4" height="220">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="120" time="75" tween="sine" easing="out" center="140,70" />
						<effect type="zoom" end="83.5" time="225" tween="sine" delay="100" easing="out" center="140,70" />
					</animation>
					<control type="image">
						<width>140</width>
						<height>120</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>152</width>
						<height>132</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>152</width>
						<height>132</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>30</left>
						<width>80</width>
						<height>80</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>
	<include name="PersonalWidgetPanelCategoriesSmall">
		<control type="group" id="239001666">
			<left>55</left>
			<top>80</top>
			<height>90</height>
			<right>55</right>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<left>2</left>
				<top>13</top>
				<width>11</width>
				<height>11</height>
				<texture colordiffuse="$VAR[SkinColorVar]">frame/puce.png</texture>
			</control>
			<control type="label">
				<left>22</left>
				<top>0</top>
				<right>2</right>
				<height>90</height>
				<label>$VAR[LabelCategoriesSmallVar]</label>
				<font>font25_title</font>
				<shadowcolor>text_shadow</shadowcolor>
			</control>
		</control>
		<control type="group" id="239001599">
			<height>160</height>
			<left>180</left>
			<visible>Container(239001).IsUpdating + !Integer.IsGreater(Container(239001).NumItems,0)</visible>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
			</control>
			<control type="image">
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<aspectratio aligny="center">keep</aspectratio>
				<texture>dialogs/extendedprogress/loading.png</texture>
				<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
			</control>
		</control>
		<control type="panel" id="239001">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<height>220</height>
			<include content="WidgetListCommon">
				<param name="list_id" value="239001"/>
			</include>
			<visible>String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel)</visible>
			<visible>Skin.HasSetting(UseSmallerCategories) + String.IsEmpty(Container(9000).ListItem.Property(HideSubMenu))</visible>
			<itemlayout width="122.4" height="220">
				<control type="group">
					<left>70</left>
					<control type="image">
						<width>140</width>
						<height>120</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>20</top>
						<left>30</left>
						<width>80</width>
						<height>80</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="122.4" height="220">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="120" time="75" tween="sine" easing="out" center="140,70" />
						<effect type="zoom" end="83.5" time="225" tween="sine" delay="100" easing="out" center="140,70" />
					</animation>
					<control type="image">
						<width>140</width>
						<height>120</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>152</width>
						<height>132</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>152</width>
						<height>132</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>30</left>
						<width>80</width>
						<height>80</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>
	<include name="NotHideMainMenuWithWidgets">
		<left>462</left>
	</include>
	<include name="HideMainMenuWithWidgets">
		<left>-40</left>
	</include>
	<include name="MinimizeMainMenu">
		<left>95</left>
	</include>
	<include name="NoMinimizeTopMainMenu">
		<left>-8</left>
		<width>480</width>
	</include>
	<include name="MinimizeTopMainMenu">
		<left>-10</left>
		<width>120</width>
	</include>
	<include name="WidgetGroupListCommon">
		<orientation>vertical</orientation>
		<height>100%</height>
		<scrolltime tween="cubic" easing="out">500</scrolltime>
		<itemgap>-160</itemgap>
		<onup>20000</onup>
		<ondown>20001</ondown>
		<usecontrolcoords>true</usecontrolcoords>
		<visible>![String.IsEqual(Container(9000).ListItem.Property(ParentalControl),yes) + !String.IsEqual(Skin.String(mypassword),Skin.String(passcode))]</visible>
	</include>
	<include name="CategoryLabel">
		<param name="visible">true</param>
		<definition>
			<control type="group" id="$PARAM[list_id]666">
				<left>55</left>
				<top>80</top>
				<height>90</height>
				<right>55</right>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + String.IsEqual(Container(9000).ListItem.Property(widget),PersonalWidgetPanel) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<control type="image">
					<left>2</left>
					<top>13</top>
					<width>11</width>
					<height>11</height>
					<texture colordiffuse="$VAR[SkinColorVar]">frame/puce.png</texture>
				</control>
				<control type="label">
					<left>22</left>
					<top>0</top>
					<right>2</right>
					<height>90</height>
					<label>$PARAM[label]</label>
					<font>font25_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<visible>Skin.HasSetting(HideWidgetLabels)</visible>
				</control>
				<control type="label">
					<left>22</left>
					<top>0</top>
					<right>2</right>
					<height>90</height>
					<label>$PARAM[label]</label>
					<font>font25_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<visible>!Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels)</visible>
				</control>
				<control type="label">
					<left>22</left>
					<top>0</top>
					<right>2</right>
					<height>90</height>
					<label>$PARAM[label]$PARAM[label_focus]</label>
					<font>font25_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<visible>Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels)</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="PVRWidget">
		<control type="image">
			<top>80</top>
			<left>10</left>
			<width>670</width>
			<height>225</height>
			<texture border="21">dialogs/dialog-bg.png</texture>
		</control>
		<control type="image">
			<left>49</left>
			<top>122</top>
			<width>140</width>
			<height>140</height>
			<aspectratio>keep</aspectratio>
			<texture background="true" fallback="DefaultAddonVideo.png">$PARAM[icon]</texture>
		</control>
		<control type="label">
			<left>209</left>
			<top>117</top>
			<height>25</height>
			<width>430</width>
			<label>$PARAM[header]</label>
			<aligny>center</aligny>
			<font>font30_title</font>
			<shadowcolor>black</shadowcolor>
			<scroll>true</scroll>
		</control>
		<control type="label">
			<left>209</left>
			<top>165</top>
			<height>20</height>
			<width>430</width>
			<label>$PARAM[label1]</label>
			<font>font12</font>
			<textcolor>$VAR[SkinColorVar]</textcolor>
			<shadowcolor>black</shadowcolor>
			<scroll>true</scroll>
		</control>
		<control type="label">
			<left>209</left>
			<top>205</top>
			<height>50</height>
			<width>430</width>
			<label>$PARAM[label2]</label>
			<font>font12</font>
			<shadowcolor>black</shadowcolor>
			<scroll>true</scroll>
		</control>
	</include>
	<include name="WidgetPanelPoster">
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-23</left>
				<top>115</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>965</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<onleft>9000</onleft>
				<onback>9000</onback>
				<onright/>
				<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<itemlayout width="310" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<include content="InfoWallMovieLayout">
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallMovieLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetPanelEpisodes">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>110</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>965</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<onleft>9000</onleft>
				<onback>9000</onback>
				<onright/>
				<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<itemlayout width="340" height="290" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="340" height="290" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="430" height="242" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="430" height="242" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetPanelEpisodesBanners">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>110</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>965</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<onleft>9000</onleft>
				<onback>9000</onback>
				<onright/>
				<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<itemlayout width="340" height="340" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="340" height="340" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="430" height="330" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="430" height="330" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetPanelSquare">
		<param name="sub_label">$INFO[ListItem.Label]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<param name="fallback_icon">DefaultAudio.png</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>120</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>965</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<onleft>9000</onleft>
				<onback>9000</onback>
				<onright/>
				<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<itemlayout width="340" height="410" condition="Skin.HasSetting(HideWidgetLabels)">
					<control type="group">
						<left>70</left>
						<include content="InfoWallMusicLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="340" height="410" condition="Skin.HasSetting(HideWidgetLabels)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallMusicLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="340" height="340" condition="!Skin.HasSetting(HideWidgetLabels)">
					<control type="group">
						<left>70</left>
						<include content="InfoWallMusicLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="340" height="340" condition="!Skin.HasSetting(HideWidgetLabels)">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallMusicLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetPanelBanners">
		<param name="visible">True</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-29</left>
				<top>115</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>965</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<onleft>9000</onleft>
				<onback>9000</onback>
				<onright/>
				<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<itemlayout height="210" width="680">
					<control type="group">
						<control type="image">
							<left>87</left>
							<top>-2</top>
							<width>676</width>
							<height>204</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-personalbanner.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>89</left>
							<top>0</top>
							<width>672</width>
							<height>200</height>
							<texture background="true">dialogs/dialog-bg-nobo.png</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>89</left>
							<top>0</top>
							<width>672</width>
							<height>200</height>
							<texture background="true">dialogs/dialog-bg-nobo.png</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders) + String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>89</left>
							<top>0</top>
							<width>672</width>
							<height>200</height>
							<texture background="true">dialogs/dialog-bg-nobo.png</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<width>850</width>
							<height>157</height>
							<texture background="true">$INFO[ListItem.Art(banner)]</texture>
							<aspectratio aligny="center" align="center">keep</aspectratio>
							<bordersize>20</bordersize>
							<visible>!String.IsEmpty(ListItem.Art(banner))</visible>
						</control>
						<control type="image">
							<left>89</left>
							<top>0</top>
							<width>672</width>
							<height>157</height>
							<texture background="true" fallback="DefaultBanner.png">$INFO[ListItem.Art(fanart)]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordersize>20</bordersize>
							<visible>String.IsEmpty(ListItem.Art(banner))</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>99</left>
							<top>10</top>
							<width>652</width>
							<height>137</height>
							<texture background="true" fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
							<aspectratio aligny="center" align="center">keep</aspectratio>
							<bordersize>20</bordersize>
							<visible>String.IsEmpty(ListItem.Art(banner))</visible>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>120</left>
							<top>25</top>
							<width>276</width>
							<height>107</height>
							<texture background="true">$VAR[LibraryClearLogoVar]</texture>
							<aspectratio aligny="center" align="left">keep</aspectratio>
							<visible>String.IsEmpty(ListItem.Art(banner))</visible>
						</control>
						<control type="label">
							<left>154</left>
							<top>140</top>
							<width>576</width>
							<height>43</height>
							<label>$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Label]</label>
							<font>font25_title</font>
							<align>left</align>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="label">
							<left>99</left>
							<top>140</top>
							<width>652</width>
							<height>43</height>
							<label>$INFO[ListItem.Label]</label>
							<font>font25_title</font>
							<align>center</align>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>115</left>
							<top>143</top>
							<width>32</width>
							<height>32</height>
							<texture>$VAR[ListWatchedIconVar]</texture>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>109</left>
							<top>190</top>
							<width>632</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="progress">
							<left>109</left>
							<top>162</top>
							<width>632</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.PercentPlayed</info>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="image">
							<left>109</left>
							<top>190</top>
							<width>632</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="progress">
							<left>109</left>
							<top>162</top>
							<width>632</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.Progress</info>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="image">
							<left>109</left>
							<top>20</top>
							<width>632</width>
							<height>160</height>
							<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							<aspectratio aligny="center">scale</aspectratio>
							<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>107</left>
							<top>18</top>
							<width>636</width>
							<height>164</height>
							<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							<aspectratio aligny="center">scale</aspectratio>
							<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="group">
							<left>400</left>
							<top>1</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
						<control type="group">
							<left>400</left>
							<top>1</top>
							<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0)</visible>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="210" width="680">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<control type="image">
							<left>89</left>
							<top>0</top>
							<width>672</width>
							<height>200</height>
							<texture background="true">dialogs/dialog-bg-nobo.png</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>83</left>
							<top>-6</top>
							<width>685</width>
							<height>212</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>83</left>
							<top>-6</top>
							<width>685</width>
							<height>212</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
						</control>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<width>850</width>
							<height>157</height>
							<texture background="true">$INFO[ListItem.Art(banner)]</texture>
							<aspectratio aligny="center" align="center">keep</aspectratio>
							<bordersize>20</bordersize>
							<visible>!String.IsEmpty(ListItem.Art(banner))</visible>
						</control>
						<control type="image">
							<left>89</left>
							<top>0</top>
							<width>672</width>
							<height>157</height>
							<texture background="true" fallback="DefaultBanner.png">$INFO[ListItem.Art(fanart)]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordersize>20</bordersize>
							<visible>String.IsEmpty(ListItem.Art(banner))</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>99</left>
							<top>10</top>
							<width>652</width>
							<height>137</height>
							<texture background="true" fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
							<aspectratio aligny="center" align="center">keep</aspectratio>
							<bordersize>20</bordersize>
							<visible>String.IsEmpty(ListItem.Art(banner))</visible>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>120</left>
							<top>25</top>
							<width>276</width>
							<height>107</height>
							<texture background="true">$VAR[LibraryClearLogoVar]</texture>
							<aspectratio aligny="center" align="left">keep</aspectratio>
							<visible>String.IsEmpty(ListItem.Art(banner))</visible>
						</control>
						<control type="label">
							<left>154</left>
							<top>140</top>
							<width>576</width>
							<height>43</height>
							<label>$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Label]</label>
							<font>font25_title</font>
							<align>left</align>
							<scroll>true</scroll>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="label">
							<left>99</left>
							<top>140</top>
							<width>652</width>
							<height>43</height>
							<label>$INFO[ListItem.Label]</label>
							<font>font25_title</font>
							<align>center</align>
							<scroll>true</scroll>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>115</left>
							<top>143</top>
							<width>32</width>
							<height>32</height>
							<texture>$VAR[ListWatchedIconVar]</texture>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="group">
							<left>400</left>
							<top>1</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
						<control type="image">
							<left>109</left>
							<top>190</top>
							<width>632</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="progress">
							<left>109</left>
							<top>162</top>
							<width>632</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.PercentPlayed</info>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="image">
							<left>109</left>
							<top>190</top>
							<width>632</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="progress">
							<left>109</left>
							<top>162</top>
							<width>632</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.Progress</info>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetPanelCategoriesPersonal">
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>115</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>965</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>vertical</orientation>
				<onleft>9000</onleft>
				<onback>9000</onback>
				<onright/>
				<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
				<preloaditems>2</preloaditems>
				<animation effect="slide" end="0,45" time="300" tween="sine" easing="out" condition="Control.HasFocus($PARAM[list_id]) + !Skin.HasSetting(HideWidgetLabels) + !Skin.HasSetting(HomeClearLogo)">Conditional</animation>
				<itemlayout width="320" height="215">
					<control type="group">
						<left>70</left>
						<control type="image">
							<left>-2</left>
							<top>-2</top>
							<width>320</width>
							<height>204</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-category.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<width>316</width>
							<height>200</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<width>316</width>
							<height>200</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders) + String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<width>316</width>
							<height>200</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>-2</left>
							<width>320</width>
							<height>125</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>20</left>
							<width>276</width>
							<height>160</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
							<aspectratio align="center" aligny="center">scale</aspectratio>
							<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>50</top>
							<left>30</left>
							<width>256</width>
							<height>99</height>
							<texture background="true">$VAR[LibraryClearLogoVar]</texture>
							<aspectratio aligny="center" align="left">keep</aspectratio>
							<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>-2</left>
							<width>320</width>
							<height>125</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>20</left>
							<width>276</width>
							<height>160</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
							<aspectratio align="center" aligny="center">scale</aspectratio>
							<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>30</top>
							<left>30</left>
							<width>256</width>
							<height>110</height>
							<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
							<animation effect="slide" end="0,15" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
						</control>
						<control type="label">
							<left>28</left>
							<top>143</top>
							<width>260</width>
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>font25_narrow</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="label">
							<left>53</left>
							<top>143</top>
							<width>235</width>
							<height>30</height>
							<label>$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Label]</label>
							<font>font25_narrow</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>left</align>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>21</left>
							<top>147</top>
							<width>30</width>
							<height>30</height>
							<texture>$VAR[ListWatchedIconVar]</texture>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>136</left>
							<top>110</top>
							<width>160</width>
							<height>70</height>
							<texture flipx="true">overlays/overlay-bg.png</texture>
							<visible>String.IsEqual(listitem.dbtype,episode) + ![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="label">
							<left>31</left>
							<top>150</top>
							<width>260</width>
							<label>$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</label>
							<font>font20_title</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>right</align>
							<visible>String.IsEqual(listitem.dbtype,episode)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>20</left>
							<top>110</top>
							<width>160</width>
							<height>70</height>
							<texture>overlays/overlay-bg.png</texture>
							<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>21</left>
							<top>147</top>
							<width>30</width>
							<height>30</height>
							<texture>$VAR[WallWatchedIconVar]</texture>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>20</left>
							<width>276</width>
							<height>160</height>
							<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<top>18</top>
							<left>18</left>
							<width>280</width>
							<height>164</height>
							<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
						</control>
						<control type="image">
							<left>20</left>
							<top>190</top>
							<width>276</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="progress">
							<left>20</left>
							<top>162</top>
							<width>276</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.PercentPlayed</info>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="image">
							<left>20</left>
							<top>190</top>
							<width>276</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="progress">
							<left>20</left>
							<top>162</top>
							<width>276</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.Progress</info>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="group">
							<left>133</left>
							<top>1</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
						<control type="group">
							<left>133</left>
							<top>1</top>
							<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0)</visible>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="320" height="215">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<control type="image">
							<width>316</width>
							<height>200</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<top>-6</top>
							<left>-6</left>
							<width>328</width>
							<height>212</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<top>-6</top>
							<left>-6</left>
							<width>328</width>
							<height>212</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>-2</left>
							<width>320</width>
							<height>125</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>20</left>
							<width>276</width>
							<height>160</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
							<aspectratio align="center" aligny="center">scale</aspectratio>
							<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>50</top>
							<left>30</left>
							<width>256</width>
							<height>99</height>
							<texture background="true">$VAR[LibraryClearLogoVar]</texture>
							<aspectratio aligny="center" align="left">keep</aspectratio>
							<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>-2</left>
							<width>320</width>
							<height>125</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>20</top>
							<left>20</left>
							<width>276</width>
							<height>160</height>
							<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
							<aspectratio align="center" aligny="center">scale</aspectratio>
							<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<top>30</top>
							<left>30</left>
							<width>256</width>
							<height>110</height>
							<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
							<animation effect="slide" end="0,15" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
						</control>
						<control type="label">
							<left>28</left>
							<top>143</top>
							<width>260</width>
							<height>30</height>
							<label>$INFO[ListItem.Label]</label>
							<font>font25_narrow</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<visible>String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="label">
							<left>53</left>
							<top>143</top>
							<width>235</width>
							<height>30</height>
							<label>$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Label]</label>
							<font>font25_narrow</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>left</align>
							<scroll>true</scroll>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>21</left>
							<top>147</top>
							<width>30</width>
							<height>30</height>
							<texture>$VAR[ListWatchedIconVar]</texture>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>20</left>
							<top>110</top>
							<width>160</width>
							<height>70</height>
							<texture>overlays/overlay-bg.png</texture>
							<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>21</left>
							<top>147</top>
							<width>30</width>
							<height>30</height>
							<texture>$VAR[WallWatchedIconVar]</texture>
							<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>136</left>
							<top>110</top>
							<width>160</width>
							<height>70</height>
							<texture flipx="true">overlays/overlay-bg.png</texture>
							<visible>String.IsEqual(listitem.dbtype,episode) + ![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="label">
							<left>31</left>
							<top>150</top>
							<width>260</width>
							<label>$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</label>
							<font>font20_title</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>right</align>
							<visible>String.IsEqual(listitem.dbtype,episode)</visible>
							<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>20</left>
							<top>190</top>
							<width>276</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="progress">
							<left>20</left>
							<top>162</top>
							<width>276</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.PercentPlayed</info>
							<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
						</control>
						<control type="image">
							<left>20</left>
							<top>190</top>
							<width>276</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="progress">
							<left>20</left>
							<top>162</top>
							<width>276</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.Progress</info>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="group">
							<left>133</left>
							<top>1</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="Widget">
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-23</left>
				<top>115</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>503</height>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="310" height="486">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<include content="InfoWallMovieLayout">
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="486">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallMovieLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListPoster">
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="250"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-23</left>
				<top>115</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>503</height>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="310" height="486">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<include content="InfoWallMovieLayout">
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="486">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallMovieLayout">
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="ImageWidget">
		<param name="visible">true</param>
		<param name="visible_1">true</param>
		<param name="visible_2">true</param>
		<param name="visible_3">false</param>
		<param name="button2_onclick">true</param>
		<param name="right">50</param>
		<definition>
			<control type="group" id="$PARAM[button_id]889">
				<visible>$PARAM[visible]</visible>
				<control type="grouplist" id="$PARAM[button_id]577">
					<orientation>vertical</orientation>
					<top>0</top>
					<bottom>0</bottom>
					<left>50</left>
					<right>$PARAM[right]</right>
					<align>center</align>
					<control type="textbox">
						<width>100%</width>
						<height min="0" max="300">auto</height>
						<label>$PARAM[text_label]</label>
						<align>center</align>
						<font>font36_title</font>
					</control>
					<control type="grouplist" id="$PARAM[button_id]567">
						<width>100%</width>
						<onup>9000</onup>
						<ondown>9000</ondown>
						<orientation>horizontal</orientation>
						<align>center</align>
						<onleft>9000</onleft>
						<control type="button" id="$PARAM[button_id]">
							<width>auto</width>
							<height>110</height>
							<label>$PARAM[button_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button_onclick]</onclick>
							<align>center</align>
							<texturefocus border="23" colordiffuse="$VAR[SkinColorVar]">buttons/dialogbutton-fo.png</texturefocus>
							<texturenofocus border="40">buttons/dialogbutton-nofo.png</texturenofocus>
							<visible>$PARAM[visible_1]</visible>
						</control>
						<control type="button" id="$PARAM[button_id]568">
							<width>auto</width>
							<height>110</height>
							<label>$PARAM[button2_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button2_onclick]</onclick>
							<align>center</align>
							<texturefocus border="23" colordiffuse="$VAR[SkinColorVar]">buttons/dialogbutton-fo.png</texturefocus>
							<texturenofocus border="40">buttons/dialogbutton-nofo.png</texturenofocus>
							<visible>$PARAM[visible_2]</visible>
						</control>
						<control type="button" id="$PARAM[button_id]569">
							<width>auto</width>
							<height>110</height>
							<label>$PARAM[button3_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button3_onclick]</onclick>
							<onclick>SetFocus(9000)</onclick>
							<align>center</align>
							<texturefocus border="23" colordiffuse="$VAR[SkinColorVar]">buttons/dialogbutton-fo.png</texturefocus>
							<texturenofocus border="40">buttons/dialogbutton-nofo.png</texturenofocus>
							<visible>$PARAM[visible_3]</visible>
						</control>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="InfoNextAiringEpisodeLayoutPreconfigured">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="fallback_image">DefaultVideoFanart.png</param>
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>320</width>
				<height>281</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodelayout.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>394</width>
				<height>241</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodelayout-nolabel.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>277</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>237</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>277</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>237</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>289</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>249</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>289</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>249</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>156</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>85</top>
				<left>60</left>
				<width>321</width>
				<height>124</height>
				<texture background="true">$VAR[LibraryClearLogoVar]</texture>
				<aspectratio aligny="center" align="left">keep</aspectratio>
				<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>136</left>
				<top>116</top>
				<width>160</width>
				<height>70</height>
				<texture flipx="true">overlays/overlay-bg.png</texture>
				<visible>!ListItem.IsParentFolder</visible>
				<visible>![String.IsEmpty(ListItem.Season) + String.IsEmpty(Episode)]</visible>
				<animation effect="slide" end="74,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="label">
				<left>31</left>
				<top>156</top>
				<width>260</width>
				<label>$PARAM[thumb_label]</label>
				<font>font20_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<animation effect="slide" end="74,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>116</top>
				<width>160</width>
				<height>70</height>
				<texture>overlays/overlay-bg.png</texture>
				<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
				<animation effect="slide" end="0,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>153</top>
				<width>32</width>
				<height>32</height>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<animation effect="slide" end="0,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>191</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<visible>Window.IsActive(videos)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<visible>!Window.IsActive(videos)</visible>
				<visible>!String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<control type="label">
					<left>29</left>
					<top>195</top>
					<width>260</width>
					<label>$PARAM[sub_label]</label>
					<font>font12</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
				<control type="label">
					<left>29</left>
					<top>225</top>
					<width>260</width>
					<label>$PARAM[main_label]</label>
					<font>font10</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>191</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<autoscroll delay="1000" time="1000" repeat="1000">$PARAM[focused]</autoscroll>
				<visible>String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>277</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>237</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>249</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>209</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>276</width>
				<height>237</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>350</width>
				<height>197</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>280</width>
				<height>241</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>354</width>
				<height>201</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<visible>!$PARAM[focused]</visible>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0)</visible>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
			</control>
		</definition>
	</include>
	<include name="InfoNextAiringEpisodeBannerLayoutPreconfigured">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="fallback_image">DefaultVideoFanart.png</param>
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>320</width>
				<height>320</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodebannerlayout.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>394</width>
				<height>306</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodebannerlayout-nolabel.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>316</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>302</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>316</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>302</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>328</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>314</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>328</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>314</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>81</top>
				<width>276</width>
				<height>155</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>95</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>159</top>
				<left>35</left>
				<width>321</width>
				<height>124</height>
				<texture background="true">$VAR[LibraryClearLogoVar]</texture>
				<aspectratio aligny="center" align="left">keep</aspectratio>
				<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>51</height>
				<texture background="true" fallback="DefaultBanner.png">$VAR[BannerVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>65</height>
				<texture background="true" fallback="DefaultBanner.png">$VAR[BannerVar]</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>136</left>
				<top>166</top>
				<width>160</width>
				<height>70</height>
				<texture flipx="true">overlays/overlay-bg.png</texture>
				<visible>!ListItem.IsParentFolder</visible>
				<visible>![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]</visible>
				<animation effect="slide" end="74,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="label">
				<left>31</left>
				<top>206</top>
				<width>260</width>
				<label>$PARAM[thumb_label]</label>
				<font>font20_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<animation effect="slide" end="74,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>166</top>
				<width>160</width>
				<height>70</height>
				<texture>overlays/overlay-bg.png</texture>
				<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
				<animation effect="slide" end="0,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>203</top>
				<width>32</width>
				<height>32</height>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<animation effect="slide" end="0,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>235</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<visible>Window.IsActive(videos)</visible>
				<autoscroll delay="1000" time="1000" repeat="1000">$PARAM[focused]</autoscroll>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<visible>!Window.IsActive(videos)</visible>
				<visible>!String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<control type="label">
					<left>29</left>
					<top>238</top>
					<width>260</width>
					<label>$PARAM[sub_label]</label>
					<font>font12</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
				<control type="label">
					<left>29</left>
					<top>268</top>
					<width>260</width>
					<label>$PARAM[main_label]</label>
					<font>font10</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>235</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<autoscroll delay="1000" time="1000" repeat="1000">$PARAM[focused]</autoscroll>
				<visible>String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>316</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>302</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>288</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>274</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>276</width>
				<height>276</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>350</width>
				<height>262</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>280</width>
				<height>280</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>354</width>
				<height>266</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0)</visible>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
			</control>
		</definition>
	</include>
	<include name="InfoNextAiringEpisodeLayout">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="fallback_image">DefaultVideoFanart.png</param>
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>320</width>
				<height>281</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodelayout.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>394</width>
				<height>241</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodelayout-nolabel.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>277</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>237</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>277</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>237</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>277</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>237</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>289</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>249</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>289</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>249</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>156</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>85</top>
				<left>35</left>
				<width>321</width>
				<height>124</height>
				<texture background="true">$VAR[LibraryClearLogoVar]</texture>
				<aspectratio aligny="center" align="left">keep</aspectratio>
				<visible>!String.IsEqual(listitem.dbtype,episode)</visible>
				<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>156</height>
				<texture background="true">colors/black.png</texture>
				<aspectratio>scale</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>156</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar2]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>197</height>
				<texture background="true">colors/black.png</texture>
				<aspectratio>scale</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar2]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>30</left>
				<top>40</top>
				<width>256</width>
				<height>156</height>
				<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>40</left>
				<top>50</top>
				<width>310</width>
				<height>157</height>
				<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>144</width>
				<height>58</height>
				<texture colordiffuse="4DFFFFFF">dialogs/clearlogo-widget-back.png</texture>
				<aspectratio align="left" aligny="top">keep</aspectratio>
				<visible>!Container.Content(videos)</visible>
				<visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(hide_thumbforspoiler)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<visible>![String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo))]</visible>
			</control>
			<control type="image">
				<left>22</left>
				<top>32</top>
				<width>140</width>
				<height>54</height>
				<texture background="true">$VAR[LibraryClearLogoVar]</texture>
				<aspectratio align="left" aligny="top">keep</aspectratio>
				<visible>!Container.Content(videos)</visible>
				<visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(hide_thumbforspoiler)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>136</left>
				<top>116</top>
				<width>160</width>
				<height>70</height>
				<texture flipx="true">overlays/overlay-bg.png</texture>
				<visible>!ListItem.IsParentFolder</visible>
				<visible>![String.IsEmpty(ListItem.Season) + String.IsEmpty(Episode)]</visible>
				<animation effect="slide" end="74,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="label">
				<left>31</left>
				<top>156</top>
				<width>260</width>
				<label>$PARAM[thumb_label]</label>
				<font>font20_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<animation effect="slide" end="74,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>116</top>
				<width>160</width>
				<height>70</height>
				<texture>overlays/overlay-bg.png</texture>
				<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<animation effect="slide" end="0,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>153</top>
				<width>32</width>
				<height>32</height>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<animation effect="slide" end="0,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>191</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<visible>Window.IsActive(videos)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<visible>!Window.IsActive(videos)</visible>
				<visible>!String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<control type="label">
					<left>29</left>
					<top>195</top>
					<width>260</width>
					<label>$PARAM[sub_label]</label>
					<font>font12</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
				<control type="label">
					<left>29</left>
					<top>225</top>
					<width>260</width>
					<label>$PARAM[main_label]</label>
					<font>font10</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>191</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<autoscroll delay="1000" time="1000" repeat="1000">$PARAM[focused]</autoscroll>
				<visible>String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>277</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>237</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>249</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>209</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>277</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>237</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>249</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.Progress</info>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>209</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.Progress</info>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>276</width>
				<height>237</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>350</width>
				<height>197</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>280</width>
				<height>241</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>354</width>
				<height>201</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<visible>!$PARAM[focused]</visible>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
			</control>
		</definition>
	</include>
	<include name="InfoNextAiringEpisodeBannerLayout">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="fallback_image">DefaultVideoFanart.png</param>
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>320</width>
				<height>320</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodebannerlayout.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>394</width>
				<height>306</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodebannerlayout-nolabel.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>316</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>302</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>316</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>302</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders) + String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>316</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>302</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>328</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>314</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>328</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>314</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>81</top>
				<width>276</width>
				<height>155</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>95</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>159</top>
				<left>35</left>
				<width>321</width>
				<height>124</height>
				<texture background="true">$VAR[LibraryClearLogoVar]</texture>
				<aspectratio aligny="center" align="left">keep</aspectratio>
				<visible>!String.IsEqual(listitem.dbtype,episode)</visible>
				<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>81</top>
				<width>276</width>
				<height>155</height>
				<texture background="true">colors/black.png</texture>
				<aspectratio>scale</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>81</top>
				<width>276</width>
				<height>155</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar2]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>95</top>
				<width>350</width>
				<height>197</height>
				<texture background="true">colors/black.png</texture>
				<aspectratio>scale</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>95</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWidgetThumbVar2]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>51</height>
				<texture background="true" fallback="DefaultBanner.png">$VAR[BannerVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>65</height>
				<texture background="true" fallback="DefaultVideoFanart.png">$VAR[BannerVar]</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
			</control>
			<control type="image">
				<left>30</left>
				<top>50</top>
				<width>256</width>
				<height>185</height>
				<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>45</left>
				<top>60</top>
				<width>300</width>
				<height>202</height>
				<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<visible>String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>136</left>
				<top>166</top>
				<width>160</width>
				<height>70</height>
				<texture flipx="true">overlays/overlay-bg.png</texture>
				<visible>!ListItem.IsParentFolder</visible>
				<visible>![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]</visible>
				<animation effect="slide" end="74,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="label">
				<left>31</left>
				<top>206</top>
				<width>260</width>
				<label>$PARAM[thumb_label]</label>
				<font>font20_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<animation effect="slide" end="74,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>166</top>
				<width>160</width>
				<height>70</height>
				<texture>overlays/overlay-bg.png</texture>
				<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<animation effect="slide" end="0,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>203</top>
				<width>32</width>
				<height>32</height>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
				<animation effect="slide" end="0,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>235</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<visible>Window.IsActive(videos)</visible>
				<autoscroll delay="1000" time="1000" repeat="1000">$PARAM[focused]</autoscroll>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<visible>!Window.IsActive(videos)</visible>
				<visible>!String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<control type="label">
					<left>29</left>
					<top>238</top>
					<width>260</width>
					<label>$PARAM[sub_label]</label>
					<font>font12</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
				<control type="label">
					<left>29</left>
					<top>268</top>
					<width>260</width>
					<label>$PARAM[main_label]</label>
					<font>font10</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>235</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<autoscroll delay="1000" time="1000" repeat="1000">$PARAM[focused]</autoscroll>
				<visible>String.IsEmpty(ListItem.TVShowTitle)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>316</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>302</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>288</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>274</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>316</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>302</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>288</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.Progress</info>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>274</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.Progress</info>
				<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>276</width>
				<height>276</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>30</top>
				<left>20</left>
				<width>350</width>
				<height>262</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>280</width>
				<height>280</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>28</top>
				<left>18</left>
				<width>354</width>
				<height>266</height>
				<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<visible>!$PARAM[focused]</visible>
				<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !String.IsEqual(listitem.dbtype,genre)</visible>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
			</control>
		</definition>
	</include>
	<include name="InfoNextWatchEpisodeLayout">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="fallback_image">DefaultVideoFanart.png</param>
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>320</width>
				<height>281</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodelayout.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>394</width>
				<height>241</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodelayout-nolabel.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>277</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>237</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>277</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>237</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>289</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>249</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>289</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>249</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>156</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWatchThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWatchThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>144</width>
				<height>58</height>
				<texture colordiffuse="4DFFFFFF">dialogs/clearlogo-widget-back.png</texture>
				<aspectratio align="left" aligny="top">keep</aspectratio>
				<visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(hide_thumbforspoiler)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<visible>![String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo))]</visible>
			</control>
			<control type="image">
				<left>22</left>
				<top>32</top>
				<width>140</width>
				<height>54</height>
				<texture background="true">$VAR[LibraryClearLogoVar]</texture>
				<aspectratio align="left" aligny="top">keep</aspectratio>
				<visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(hide_thumbforspoiler)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>136</left>
				<top>116</top>
				<width>160</width>
				<height>70</height>
				<texture flipx="true">overlays/overlay-bg.png</texture>
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="slide" end="74,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="label">
				<left>31</left>
				<top>156</top>
				<width>260</width>
				<label>$PARAM[thumb_label]</label>
				<font>font20_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<animation effect="slide" end="74,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>116</top>
				<width>160</width>
				<height>70</height>
				<texture>overlays/overlay-bg.png</texture>
				<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
				<animation effect="slide" end="0,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>153</top>
				<width>32</width>
				<height>32</height>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<animation effect="slide" end="0,41" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>191</top>
				<width>262</width>
				<height>70</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<visible>Window.IsActive(videos)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<visible>!Window.IsActive(videos)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<control type="label">
					<left>29</left>
					<top>195</top>
					<width>260</width>
					<label>$PARAM[sub_label]</label>
					<font>font12</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
				<control type="label">
					<left>29</left>
					<top>225</top>
					<width>260</width>
					<label>$PARAM[main_label]</label>
					<font>font10</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
			</control>
			<control type="image">
				<left>20</left>
				<top>277</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>237</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>249</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>209</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
			</control>
		</definition>
	</include>
	<include name="InfoNextWatchEpisodeBannerLayout">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="fallback_image">DefaultVideoFanart.png</param>
		<param name="focused">false</param>
		<definition>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>320</width>
				<height>320</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodebannerlayout.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>-2</left>
				<top>8</top>
				<width>394</width>
				<height>306</height>
				<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-episodebannerlayout-nolabel.png</texture>
				<aspectratio>stretch</aspectratio>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>316</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>302</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordersize>20</bordersize>
				<visible>Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>316</width>
				<height>316</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>302</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>!Skin.HasSetting(show_borders)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>328</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>314</height>
				<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>328</width>
				<height>328</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<top>4</top>
				<left>-6</left>
				<width>402</width>
				<height>314</height>
				<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
				<bordersize>20</bordersize>
				<visible>$PARAM[focused]</visible>
				<visible>Skin.HasSetting(EnableGradientColor)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>81</top>
				<width>276</width>
				<height>155</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWatchThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>95</top>
				<width>350</width>
				<height>197</height>
				<texture fallback="$PARAM[fallback_image]" background="true">$VAR[InfoWatchThumbVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>276</width>
				<height>51</height>
				<texture background="true" fallback="DefaultBanner.png">$VAR[BannerVar]</texture>
				<aspectratio aligny="top">keep</aspectratio>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>30</top>
				<width>350</width>
				<height>65</height>
				<texture background="true" fallback="DefaultBanner.png">$VAR[BannerVar]</texture>
				<aspectratio aligny="center">scale</aspectratio>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>136</left>
				<top>166</top>
				<width>160</width>
				<height>70</height>
				<texture flipx="true">overlays/overlay-bg.png</texture>
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="slide" end="74,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="label">
				<left>31</left>
				<top>206</top>
				<width>260</width>
				<label>$PARAM[thumb_label]</label>
				<font>font20_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<animation effect="slide" end="74,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>166</top>
				<width>160</width>
				<height>70</height>
				<texture>overlays/overlay-bg.png</texture>
				<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
				<animation effect="slide" end="0,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="image">
				<left>20</left>
				<top>203</top>
				<width>32</width>
				<height>32</height>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<animation effect="slide" end="0,56" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
			</control>
			<control type="textbox">
				<left>28</left>
				<top>263</top>
				<width>262</width>
				<height>80</height>
				<font>font12</font>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<visible>Window.IsActive(videos)</visible>
				<autoscroll delay="1000" time="1000" repeat="1000">$PARAM[focused]</autoscroll>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<visible>!Window.IsActive(videos)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
				<control type="label">
					<left>29</left>
					<top>238</top>
					<width>260</width>
					<label>$PARAM[sub_label]</label>
					<font>font12</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
				<control type="label">
					<left>29</left>
					<top>268</top>
					<width>260</width>
					<label>$PARAM[main_label]</label>
					<font>font10</font>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>$PARAM[focused]</scroll>
					<align>center</align>
				</control>
			</control>
			<control type="image">
				<left>20</left>
				<top>316</top>
				<width>276</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="image">
				<left>20</left>
				<top>302</top>
				<width>350</width>
				<height>4</height>
				<texture>dialogs/back.png</texture>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>288</top>
				<width>276</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="progress">
				<left>20</left>
				<top>274</top>
				<width>350</width>
				<height>1</height>
				<texturebg></texturebg>
				<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
				<info>ListItem.PercentPlayed</info>
				<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
				<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
			</control>
			<control type="group">
				<left>133</left>
				<top>11</top>
				<animation effect="slide" end="37,0" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
				<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
			</control>
		</definition>
	</include>
	<include name="WidgetNextAiringEpisodesPreconfigured">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="400"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="350"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextAiringEpisodeLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextAiringEpisodeLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetNextAiringEpisodesBannerPreconfigured">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="440"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="410"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextAiringEpisodeBannerLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeBannerLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextAiringEpisodeBannerLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeBannerLayoutPreconfigured">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetNextAiringEpisodes">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="400"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="350"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetNextAiringEpisodesBanner">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="440"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="410"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextAiringEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetNextWatchEpisodes">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="400"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="350"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextWatchEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextWatchEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextWatchEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextWatchEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetNextWatchEpisodesBanner">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="440"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="410"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoNextWatchEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextWatchEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoNextWatchEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoNextWatchEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListEpisodes">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="400"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="350"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoWallEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="500" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoWallEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="400" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallEpisodeLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListEpisodesBanner">
		<param name="main_label">$INFO[ListItem.Title]</param>
		<param name="sub_label">$INFO[ListItem.TVShowTitle]</param>
		<param name="thumb_label">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>105</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="440"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="410"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>5</top>
						<include content="InfoWallEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="550" condition="![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<itemlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<left>70</left>
						<top>0</top>
						<include content="InfoWallEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="390" height="450" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>0</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallEpisodeBannerLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="thumb_label" value="$PARAM[thumb_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListSquare">
		<param name="sub_label">$INFO[ListItem.Label]</param>
		<param name="sortby"></param>
		<param name="visible">True</param>
		<param name="sortorder">ascending</param>
		<param name="widget_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<param name="fallback_icon">DefaultAudio.png</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="220"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>120</top>
				<right>0</right>
				<include content="WidgetHeight" condition="Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="480"/>
				</include>
				<include content="WidgetHeight" condition="!Skin.HasSetting(HideWidgetLabels)">
					<param name="height" value="410"/>
				</include>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="500">
					<control type="group">
						<left>70</left>
						<top>-5</top>
						<include content="InfoWallMusicLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="focused" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="500">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<top>-5</top>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<include content="InfoWallMusicLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[widget_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListCategories">
		<param name="item_limit">50</param>
		<param name="icon">$INFO[ListItem.Icon]</param>
		<param name="icon_height">120</param>
		<param name="pvr_submenu">false</param>
		<param name="pvr_type">TV</param>
		<param name="visible">true</param>
		<param name="fallback_image">DefaultFolder.png</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>110</top>
				<right>0</right>
				<height>290</height>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="340">
					<control type="group">
						<left>70</left>
						<control type="image">
							<width>316</width>
							<height>200</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<centertop>74</centertop>
							<left>58</left>
							<width>200</width>
							<height>$PARAM[icon_height]</height>
							<texture fallback="$PARAM[fallback_image]">$PARAM[icon]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="slide" end="0,26" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
						</control>
						<control type="textbox">
							<left>18</left>
							<top>107</top>
							<width>280</width>
							<height>68</height>
							<label>$INFO[ListItem.Label]</label>
							<font>font25_narrow</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<aligny>center</aligny>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="340">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="228,70" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="228,70" />
						</animation>
						<control type="image">
							<width>316</width>
							<height>200</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<top>-6</top>
							<left>-6</left>
							<width>328</width>
							<height>212</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<top>-6</top>
							<left>-6</left>
							<width>328</width>
							<height>212</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
						</control>
						<control type="image">
							<centertop>74</centertop>
							<left>58</left>
							<width>200</width>
							<height>$PARAM[icon_height]</height>
							<texture fallback="$PARAM[fallback_image]">$PARAM[icon]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="slide" end="0,26" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
						</control>
						<control type="textbox">
							<left>18</left>
							<top>107</top>
							<width>280</width>
							<height>68</height>
							<label>$INFO[ListItem.Label]</label>
							<font>font25_narrow</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<aligny>center</aligny>
							<autoscroll delay="1000" time="1000" repeat="1000">true</autoscroll>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
					</control>
				</focusedlayout>
				<include condition="!$PARAM[pvr_submenu]" content="SubmenuContent">
					<param name="widget_target" value="$PARAM[widget_target]"/>
					<param name="item_limit" value="$PARAM[item_limit]"/>
					<param name="content_path" value="$PARAM[content_path]"/>
				</include>
				<include condition="$PARAM[pvr_submenu]" content="PVRSubMenuContent">
					<param name="pvr_type" value="$PARAM[pvr_type]"/>
				</include>
			</control>
		</definition>
	</include>
	<include name="WidgetListCategoriesPersonal">
		<include content="CategoryLabel">
			<param name="label">$PARAM[widget_header]</param>
			<param name="label_focus">$PARAM[widget_header_focus]</param>
			<param name="list_id" value="$PARAM[list_id]"/>
			<param name="visible" value="$PARAM[visible]"/>
		</include>
		<include content="BusyListSpinner">
			<param name="list_id" value="$PARAM[list_id]"/>
			<param name="visible" value="$PARAM[visible]"/>
		</include>
		<control type="panel" id="$PARAM[list_id]">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<height>315</height>
			<include content="WidgetListCommon">
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<visible>$PARAM[visible]</visible>
			<itemlayout width="310" height="340">
				<control type="group">
					<left>70</left>
					<top>10</top>
					<control type="image">
						<left>-2</left>
						<top>-2</top>
						<width>320</width>
						<height>204</height>
						<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-category.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
					</control>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
					</control>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(show_borders) + String.IsEqual(listitem.dbtype,genre)</visible>
					</control>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
						<visible>!Skin.HasSetting(show_borders)</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>-2</left>
						<width>320</width>
						<height>125</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>276</width>
						<height>160</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>50</top>
						<left>30</left>
						<width>256</width>
						<height>99</height>
						<texture background="true">$VAR[LibraryClearLogoVar]</texture>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>-2</left>
						<width>320</width>
						<height>125</height>
						<texture>colors/black.png</texture>
						<aspectratio>scale</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>-2</left>
						<width>320</width>
						<height>125</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>276</width>
						<height>160</height>
						<texture>colors/black.png</texture>
						<aspectratio>scale</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>276</width>
						<height>160</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>30</top>
						<left>30</left>
						<width>256</width>
						<height>110</height>
						<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						<animation effect="slide" end="0,15" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
					</control>
					<control type="label">
						<left>28</left>
						<top>143</top>
						<width>260</width>
						<height>30</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="label">
						<left>53</left>
						<top>143</top>
						<width>235</width>
						<height>30</height>
						<label>$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>left</align>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>21</left>
						<top>147</top>
						<width>30</width>
						<height>30</height>
						<texture>$VAR[ListWatchedIconVar]</texture>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>136</left>
						<top>110</top>
						<width>160</width>
						<height>70</height>
						<texture flipx="true">overlays/overlay-bg.png</texture>
						<visible>String.IsEqual(listitem.dbtype,episode) + ![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="label">
						<left>31</left>
						<top>150</top>
						<width>260</width>
						<label>$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</label>
						<font>font20_title</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>right</align>
						<visible>String.IsEqual(listitem.dbtype,episode)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>110</top>
						<width>160</width>
						<height>70</height>
						<texture>overlays/overlay-bg.png</texture>
						<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>21</left>
						<top>147</top>
						<width>30</width>
						<height>30</height>
						<texture>$VAR[WallWatchedIconVar]</texture>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>276</width>
						<height>160</height>
						<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + !Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
					</control>
					<control type="image">
						<top>18</top>
						<left>18</left>
						<width>280</width>
						<height>164</height>
						<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(show_borders) + !String.IsEqual(listitem.dbtype,genre)</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>190</top>
						<width>276</width>
						<height>4</height>
						<texture>dialogs/back.png</texture>
						<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
					</control>
					<control type="progress">
						<left>20</left>
						<top>162</top>
						<width>276</width>
						<height>1</height>
						<texturebg></texturebg>
						<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
						<info>ListItem.PercentPlayed</info>
						<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>190</top>
						<width>276</width>
						<height>4</height>
						<texture>dialogs/back.png</texture>
						<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
					</control>
					<control type="progress">
						<left>20</left>
						<top>162</top>
						<width>276</width>
						<height>1</height>
						<texturebg></texturebg>
						<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
						<info>ListItem.Progress</info>
						<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
					</control>
					<control type="group">
						<left>133</left>
						<top>1</top>
						<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
					</control>
					<control type="group">
						<left>133</left>
						<top>1</top>
						<visible>Skin.HasSetting(greyedout_watched_home) + Integer.IsGreater(ListItem.Playcount,0)</visible>
						<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircleGreyed</include>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="310" height="340">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<top>10</top>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
						<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
					</animation>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>-2</left>
						<width>320</width>
						<height>125</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>276</width>
						<height>160</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar]</texture>
						<aspectratio align="center" aligny="center">scale</aspectratio>
						<visible>!String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>50</top>
						<left>30</left>
						<width>256</width>
						<height>99</height>
						<texture background="true">$VAR[LibraryClearLogoVar]</texture>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[String.IsEmpty(Listitem.Art(season.landscape)) + String.IsEmpty(Listitem.Art(tvshow.landscape)) + String.IsEmpty(Listitem.Art(landscape))]</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>-2</left>
						<width>320</width>
						<height>125</height>
						<texture>colors/black.png</texture>
						<aspectratio>scale</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>-2</left>
						<width>320</width>
						<height>125</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>276</width>
						<height>160</height>
						<texture>colors/black.png</texture>
						<aspectratio>scale</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<width>276</width>
						<height>160</height>
						<texture fallback="DefaultVideoFanart.png">$VAR[InfoWidgetThumbVar2]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>String.IsEqual($PARAM[infolabel_prefix]listitem.dbtype,episode)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<top>30</top>
						<left>30</left>
						<width>256</width>
						<height>110</height>
						<texture fallback="DefaultGenre.png">$VAR[WidgetGenreIconVar]</texture>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						<animation effect="slide" end="0,15" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
					</control>
					<control type="label">
						<left>28</left>
						<top>143</top>
						<width>260</width>
						<height>30</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<visible>String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="label">
						<left>53</left>
						<top>143</top>
						<width>235</width>
						<height>30</height>
						<label>$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>left</align>
						<visible>!String.IsEqual(listitem.dbtype,genre)-</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>21</left>
						<top>147</top>
						<width>30</width>
						<height>30</height>
						<texture>$VAR[ListWatchedIconVar]</texture>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>110</top>
						<width>160</width>
						<height>70</height>
						<texture>overlays/overlay-bg.png</texture>
						<visible>ListItem.IsResumable | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>21</left>
						<top>147</top>
						<width>30</width>
						<height>30</height>
						<texture>$VAR[WallWatchedIconVar]</texture>
						<visible>!String.IsEqual(listitem.dbtype,genre)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>136</left>
						<top>110</top>
						<width>160</width>
						<height>70</height>
						<texture flipx="true">overlays/overlay-bg.png</texture>
						<visible>String.IsEqual(listitem.dbtype,episode) + ![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="label">
						<left>31</left>
						<top>150</top>
						<width>260</width>
						<label>$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</label>
						<font>font20_title</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>right</align>
						<visible>String.IsEqual(listitem.dbtype,episode)</visible>
						<visible>[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>190</top>
						<width>276</width>
						<height>4</height>
						<texture>dialogs/back.png</texture>
						<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
					</control>
					<control type="progress">
						<left>20</left>
						<top>162</top>
						<width>276</width>
						<height>1</height>
						<texturebg></texturebg>
						<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
						<info>ListItem.PercentPlayed</info>
						<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
					</control>
					<control type="image">
						<left>20</left>
						<top>190</top>
						<width>276</width>
						<height>4</height>
						<texture>dialogs/back.png</texture>
						<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
					</control>
					<control type="progress">
						<left>20</left>
						<top>162</top>
						<width>276</width>
						<height>1</height>
						<texturebg></texturebg>
						<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
						<info>ListItem.Progress</info>
						<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
					</control>
					<control type="group">
						<left>133</left>
						<top>1</top>
						<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
					</control>
				</control>
			</focusedlayout>
			<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$VAR[Label_SkinSetting_WidgetNumber]">$PARAM[content_path]</content>
		</control>
	</include>
	<include name="WidgetListCategoriesBig">
		<include content="CategoryLabel">
			<param name="label">$PARAM[widget_header]</param>
			<param name="label_focus">$PARAM[widget_header_focus]</param>
			<param name="list_id" value="$PARAM[list_id]"/>
			<param name="visible" value="$PARAM[visible]"/>
		</include>
		<include content="BusyListSpinner">
			<param name="list_id" value="$PARAM[list_id]"/>
			<param name="visible" value="$PARAM[visible]"/>
		</include>
		<control type="panel" id="$PARAM[list_id]">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<height>290</height>
			<include content="WidgetListCommon">
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<visible>$PARAM[visible]</visible>
			<itemlayout width="310" height="340">
				<control type="group">
					<left>70</left>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="310" height="340">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="228,70" />
						<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="228,70" />
					</animation>
					<control type="image">
						<width>316</width>
						<height>200</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>328</width>
						<height>212</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<centertop>74</centertop>
						<left>58</left>
						<width>200</width>
						<height>120</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<control type="textbox">
						<left>18</left>
						<top>107</top>
						<width>280</width>
						<height>68</height>
						<label>$INFO[ListItem.Label]</label>
						<font>font25_narrow</font>
						<shadowcolor>text_shadow</shadowcolor>
						<align>center</align>
						<aligny>center</aligny>
						<autoscroll delay="1000" time="1000" repeat="1000">true</autoscroll>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>
	<include name="WidgetListCategoriesSmall">
		<include content="CategoryLabel">
			<param name="label">$VAR[LabelCategoriesSmallVar]</param>
			<param name="list_id" value="$PARAM[list_id]"/>
			<param name="visible" value="$PARAM[visible]"/>
		</include>
		<include content="BusyListSpinner">
			<param name="list_id" value="$PARAM[list_id]"/>
			<param name="visible" value="$PARAM[visible]"/>
		</include>
		<control type="panel" id="$PARAM[list_id]">
			<left>-10</left>
			<top>110</top>
			<right>0</right>
			<height>220</height>
			<include content="WidgetListCommon">
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<visible>$PARAM[visible]</visible>
			<itemlayout width="122.4" height="220">
				<control type="group">
					<left>70</left>
					<control type="image">
						<width>140</width>
						<height>120</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>20</top>
						<left>30</left>
						<width>80</width>
						<height>80</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="122.4" height="220">
				<control type="group">
					<depth>DepthContentPopout</depth>
					<left>70</left>
					<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
						<effect type="zoom" end="120" time="75" tween="sine" easing="out" center="140,70" />
						<effect type="zoom" end="83.5" time="225" tween="sine" delay="100" easing="out" center="140,70" />
					</animation>
					<control type="image">
						<width>140</width>
						<height>120</height>
						<texture>dialogs/dialog-bg-nobo.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>152</width>
						<height>132</height>
						<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
						<bordertexture border="21">overlays/shadow.png</bordertexture>
						<bordersize>20</bordersize>
					</control>
					<control type="image">
						<top>-6</top>
						<left>-6</left>
						<width>152</width>
						<height>132</height>
						<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
						<bordersize>20</bordersize>
						<visible>Skin.HasSetting(EnableGradientColor)</visible>
					</control>
					<control type="image">
						<top>20</top>
						<left>30</left>
						<width>80</width>
						<height>80</height>
						<texture fallback="DefaultFolder.png">$INFO[ListItem.Icon]</texture>
						<aspectratio>keep</aspectratio>
					</control>
				</control>
			</focusedlayout>
			<content>
				<include>skinshortcuts-submenu</include>
			</content>
		</control>
	</include>
	<include name="SubmenuContent">
		<content target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
	</include>
	<include name="PVRSubMenuContent">
		<content>
			<item>
				<label>$LOCALIZE[19019]</label>
				<onclick>ActivateWindow($PARAM[pvr_type]Channels)</onclick>
				<thumb>DefaultAddonPeripheral.png</thumb>
			</item>
			<item>
				<label>$LOCALIZE[19069]</label>
				<onclick>ActivateWindow($PARAM[pvr_type]Guide)</onclick>
				<thumb>icons/pvr/epg.png</thumb>
			</item>
			<item>
				<label>$LOCALIZE[19017]</label>
				<onclick>ActivateWindow($PARAM[pvr_type]Recordings)</onclick>
				<thumb>icons/pvr/recording.png</thumb>
			</item>
			<item>
				<label>$LOCALIZE[19040]</label>
				<onclick>ActivateWindow($PARAM[pvr_type]Timers)</onclick>
				<thumb>icons/pvr/timer.png</thumb>
			</item>
			<item>
				<label>$LOCALIZE[19138]</label>
				<onclick>ActivateWindow($PARAM[pvr_type]TimerRules)</onclick>
				<thumb>icons/pvr/timer-rule.png</thumb>
			</item>
			<item>
				<label>$LOCALIZE[137]</label>
				<onclick>ActivateWindow($PARAM[pvr_type]Search)</onclick>
				<thumb>DefaultAddonsSearch.png</thumb>
			</item>
		</content>
	</include>
	<include name="WidgetListChannels">
		<param name="item_limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<param name="icon">$INFO[ListItem.Icon]</param>
		<param name="label">$INFO[ListItem.Label]</param>
		<param name="label2">$INFO[ListItem.Title]</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="label_focus">$PARAM[widget_header_focus]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="200"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>120</top>
				<right>0</right>
				<height>430</height>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="310" height="500">
					<control type="group">
						<left>70</left>
						<control type="image">
							<left>-2</left>
							<top>-2</top>
							<width>323</width>
							<height>344</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-picturelayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<width>319</width>
							<height>340</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<width>319</width>
							<height>340</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<top>43</top>
							<left>38</left>
							<width>245</width>
							<height>200</height>
							<texture fallback="DefaultTVShows.png">$PARAM[icon]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="slide" end="0,27" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
						</control>
						<control type="label">
							<left>42</left>
							<top>247</top>
							<width>245</width>
							<height>70</height>
							<label>$PARAM[label]</label>
							<font>font12</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<aligny>top</aligny>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="label">
							<left>42</left>
							<top>277</top>
							<width>245</width>
							<height>65</height>
							<label>$PARAM[label2]</label>
							<font>font12</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<aligny>top</aligny>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>260</left>
							<top>30</top>
							<width>32</width>
							<height>32</height>
							<texture>$VAR[WallWatchedIconVar]</texture>
						</control>
						<control type="image">
							<left>20</left>
							<top>330</top>
							<width>279</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="progress">
							<left>20</left>
							<top>302</top>
							<width>279</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.Progress</info>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="310" height="500">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>70</left>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<control type="image">
							<left>-2</left>
							<top>-2</top>
							<width>323</width>
							<height>344</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-picturelayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<width>319</width>
							<height>340</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<width>319</width>
							<height>340</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<top>-6</top>
							<left>-6</left>
							<width>331</width>
							<height>352</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<top>-6</top>
							<left>-6</left>
							<width>331</width>
							<height>352</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
						</control>
						<control type="image">
							<top>43</top>
							<left>38</left>
							<width>245</width>
							<height>200</height>
							<texture fallback="DefaultTVShows.png">$PARAM[icon]</texture>
							<aspectratio>keep</aspectratio>
							<animation effect="slide" end="0,27" time="0" condition="[!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]">Conditional</animation>
						</control>
						<control type="label">
							<left>42</left>
							<top>247</top>
							<width>245</width>
							<height>70</height>
							<label>$PARAM[label]</label>
							<font>font12</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<scroll>true</scroll>
							<aligny>top</aligny>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="label">
							<left>42</left>
							<top>277</top>
							<width>245</width>
							<height>65</height>
							<label>$PARAM[label2]</label>
							<font>font12</font>
							<shadowcolor>text_shadow</shadowcolor>
							<align>center</align>
							<scroll>true</scroll>
							<aligny>top</aligny>
							<visible>![!Skin.HasSetting(HideWidgetLabels) + Window.IsVisible(Home)]</visible>
						</control>
						<control type="image">
							<left>260</left>
							<top>30</top>
							<width>32</width>
							<height>32</height>
							<texture>$VAR[WallWatchedIconVar]</texture>
						</control>
						<control type="image">
							<left>20</left>
							<top>330</top>
							<width>279</width>
							<height>4</height>
							<texture>dialogs/back.png</texture>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
						<control type="progress">
							<left>20</left>
							<top>302</top>
							<width>279</width>
							<height>1</height>
							<texturebg></texturebg>
							<midtexture colordiffuse="$VAR[SkinColorVar]" border="3">progress/texturebg_alt_white.png</midtexture>
							<info>ListItem.Progress</info>
							<visible>!Integer.IsEqual(ListItem.Progress,0)</visible>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WeatherWidget">
		<param name="width">266</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<control type="panel" id="$PARAM[list_id]">
				<left>-10</left>
				<top>90</top>
				<right>0</right>
				<height>396</height>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<itemlayout width="$PARAM[width]" height="320">
					<control type="group">
						<left>70</left>
						<control type="image">
							<left>0</left>
							<top>20</top>
							<width>254</width>
							<height>280</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>68</left>
							<top>108</top>
							<width>130</width>
							<height>130</height>
							<texture>$INFO[ListItem.Icon]</texture>
							<visible>!String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) + !String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) + !String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)</visible>
						</control>
						<control type="multiimage">
							<left>68</left>
							<top>113</top>
							<width>120</width>
							<height>120</height>
							<imagepath>$INFO[ListItem.Icon]</imagepath>
							<timeperimage>110</timeperimage>
							<randomize>false</randomize>
							<fadetime>5</fadetime>
							<visible>String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)</visible>
						</control>
						<control type="label">
							<left>15</left>
							<top>45</top>
							<align>center</align>
							<label>$INFO[ListItem.Label]</label>
							<width>230</width>
						</control>
						<control type="label">
							<left>15</left>
							<top>78</top>
							<align>center</align>
							<font>font12</font>
							<label>$INFO[ListItem.Property(ShortDate)]</label>
							<width>230</width>
						</control>
						<control type="label">
							<left>15</left>
							<top>236</top>
							<align>center</align>
							<label>$INFO[ListItem.Label2]</label>
							<font>font12</font>
							<width>230</width>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="$PARAM[width]" height="400">
					<control type="group">
						<left>70</left>
						<depth>DepthContentPopout</depth>
						<animation type="Focus" condition="!Skin.HasSetting(no_animations)" reversible="false">
							<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="91" time="225" tween="sine" delay="100" easing="out" center="auto" />
						</animation>
						<control type="image">
							<left>0</left>
							<top>20</top>
							<width>254</width>
							<height>280</height>
							<texture>dialogs/dialog-bg-nobo.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>-6</left>
							<top>14</top>
							<width>266</width>
							<height>292</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>-6</left>
							<top>14</top>
							<width>266</width>
							<height>292</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
						</control>
						<control type="image">
							<left>68</left>
							<top>108</top>
							<width>130</width>
							<height>130</height>
							<texture>$INFO[ListItem.Icon]</texture>
							<visible>!String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) + !String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) + !String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)</visible>
						</control>
						<control type="multiimage">
							<left>68</left>
							<top>113</top>
							<width>120</width>
							<height>120</height>
							<imagepath>$INFO[ListItem.Icon]</imagepath>
							<timeperimage>110</timeperimage>
							<randomize>false</randomize>
							<fadetime>5</fadetime>
							<visible>String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)</visible>
						</control>
						<control type="label">
							<left>15</left>
							<top>45</top>
							<align>center</align>
							<label>$INFO[ListItem.Label]</label>
							<width>230</width>
						</control>
						<control type="label">
							<left>15</left>
							<top>78</top>
							<align>center</align>
							<font>font12</font>
							<label>$INFO[ListItem.Property(ShortDate)]</label>
							<width>230</width>
						</control>
						<control type="label">
							<left>15</left>
							<top>236</top>
							<align>center</align>
							<label>$INFO[ListItem.Label2]</label>
							<font>font12</font>
							<width>230</width>
						</control>
					</control>
				</focusedlayout>
				<include>$PARAM[content_include]</include>
			</control>
		</definition>
	</include>
	<include name="HourlyItems">
		<content>
			<item>
				<icon>resource://resource.images.weathericons.default/na.png</icon>
				<visible>String.IsEmpty(Window(weather).Property(Hourly.IsFetched)) + String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
			</item>
			<item>
				<icon>$INFO[Skin.String(WeatherIcons.path)]na.png</icon>
				<visible>String.IsEmpty(Window(weather).Property(Hourly.IsFetched)) + !String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
			</item>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="7" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="8" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="9" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="10" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="11" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="12" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="13" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="14" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="15" />
			</include>
		</content>
	</include>
	<include name="DailyItems">
		<content>
			<item>
				<icon>resource://resource.images.weathericons.default/na.png</icon>
				<visible>String.IsEmpty(Window(weather).Property(Daily.IsFetched)) + String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
			</item>
			<item>
				<icon>$INFO[Skin.String(WeatherIcons.path)]na.png</icon>
				<visible>String.IsEmpty(Window(weather).Property(Daily.IsFetched)) + !String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
			</item>
			<include content="WeatherDailyItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="7" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="8" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="9" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="10" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="11" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="12" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="13" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="14" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="15" />
			</include>
		</content>
	</include>
	<include name="WeatherHourlyItem">
		<item>
			<label>$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Time)]</label>
			<label2>$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)] ∙ $INFO[Window(weather).Property(Hourly.$PARAM[item_index].Precipitation)]</label2>
			<property name="Temperature">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Hourly.$PARAM[item_id].Outlook)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Cloudiness)]</property>
			<property name="ShortDate">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].LongDate)]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].FanartCode)]</property>
			<thumb>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Hourly.$PARAM[item_index].OutlookIcon)]</thumb>
			<visible>!String.IsEmpty(Window(weather).Property(Hourly.$PARAM[item_index].Outlook)) + !String.IsEmpty(Window(weather).Property(Hourly.$PARAM[item_index].FanartCode)) + String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
		</item>
		<item>
			<label>$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Time)]</label>
			<label2>$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)] ∙ $INFO[Window(weather).Property(Hourly.$PARAM[item_index].Precipitation)]</label2>
			<property name="Temperature">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Hourly.$PARAM[item_id].Outlook)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Cloudiness)]</property>
			<property name="ShortDate">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].LongDate)]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].FanartCode)]</property>
			<thumb>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].OutlookIcon)]</thumb>
			<visible>![String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)] + !String.IsEmpty(Window(weather).Property(Hourly.$PARAM[item_index].Outlook)) + !String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
		</item>
		<item>
			<label>$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Time)]</label>
			<label2>$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)] ∙ $INFO[Window(weather).Property(Hourly.$PARAM[item_index].Precipitation)]</label2>
			<property name="Temperature">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Hourly.$PARAM[item_id].Outlook)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Cloudiness)]</property>
			<property name="ShortDate">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].LongDate)]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].FanartCode)]</property>
			<thumb>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].FanartCode)]$INFO[Skin.String(WeatherIcons.multi)]</thumb>
			<visible>[String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)] + !String.IsEmpty(Window(weather).Property(Hourly.$PARAM[item_index].Outlook)) + !String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
		</item>
	</include>
	<include name="WeatherDailyItem">
		<item>
			<label>$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</label>
			<label2>[COLOR blue]$INFO[Window(weather).Property(Daily.$PARAM[item_index].LowTemperature)][/COLOR] ∙ [COLOR red]$INFO[Window(weather).Property(Daily.$PARAM[item_index].HighTemperature)][/COLOR]</label2>
			<property name="LongDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</property>
			<property name="TempDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].TempDay)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Cloudiness)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Outlook)]</property>
			<property name="ShortDate">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDate)]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Daily.$PARAM[item_index].FanartCode)]</property>
			<thumb>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Daily.$PARAM[item_index].OutlookIcon)]</thumb>
			<visible>!String.IsEmpty(Window(weather).Property(Daily.$PARAM[item_index].Outlook)) + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[item_index].FanartCode)) + String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
		</item>
		<item>
			<label>$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</label>
			<label2>[COLOR blue]$INFO[Window(weather).Property(Daily.$PARAM[item_index].LowTemperature)][/COLOR] ∙ [COLOR red]$INFO[Window(weather).Property(Daily.$PARAM[item_index].HighTemperature)][/COLOR]</label2>
			<property name="LongDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</property>
			<property name="TempDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].TempDay)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Cloudiness)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Outlook)]</property>
			<property name="ShortDate">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDate)]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Daily.$PARAM[item_index].FanartCode)]</property>
			<thumb>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Daily.$PARAM[item_index].OutlookIcon)]</thumb>
			<visible>![String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)] + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[item_index].Outlook)) + !String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
		</item>
		<item>
			<label>$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</label>
			<label2>[COLOR blue]$INFO[Window(weather).Property(Daily.$PARAM[item_index].LowTemperature)][/COLOR] ∙ [COLOR red]$INFO[Window(weather).Property(Daily.$PARAM[item_index].HighTemperature)][/COLOR]</label2>
			<property name="LongDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</property>
			<property name="TempDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].TempDay)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Cloudiness)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Outlook)]</property>
			<property name="ShortDate">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDate)]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Daily.$PARAM[item_index].FanartCode)]</property>
			<thumb>$INFO[Skin.String(WeatherIcons.path)]$INFO[Window(weather).Property(Daily.$PARAM[item_index].FanartCode)]$INFO[Skin.String(WeatherIcons.multi)]</thumb>
			<visible>[String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - HD Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Cloud Animated) | String.IsEqual(Skin.String(WeatherIcons.name),Weather Icons - Animated)] + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[item_index].FanartCode)) + !String.IsEmpty(Skin.String(WeatherIcons.name))</visible>
		</item>
	</include>
	<include name="WeatherMapItem">
		<control type="group" id="700$PARAM[item_id]">
			<height>1110</height>
			<visible>Weather.IsFetched + !String.IsEmpty(Window(weather).Property(Map.$PARAM[item_id].Area)) + !String.IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
			<centerleft>50%</centerleft>
			<width>1920</width>
			<control type="image" id="700$PARAM[item_id]1">
				<left>50</left>
				<top>100</top>
				<width>1820</width>
				<height>920</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
			</control>
			<control type="image" id="700$PARAM[item_id]2">
				<left>120</left>
				<top>160</top>
				<width>1680</width>
				<height>800</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Area)]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image" id="700$PARAM[item_id]3">
				<left>120</left>
				<top>160</top>
				<width>1680</width>
				<height>800</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Layer)]</texture>
				<aspectratio>scale</aspectratio>
				<colordiffuse>70FFFFFF</colordiffuse>
			</control>
			<control type="image" id="700$PARAM[item_id]4">
				<left>1340</left>
				<top>880</top>
				<width>350</width>
				<height>55</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Legend)]</texture>
			</control>
		</control>
		<control type="button" id="700$PARAM[item_id]0">
			<left>1000</left>
			<top>0</top>
			<width>340</width>
			<height>100</height>
			<align>center</align>
			<aligny>center</aligny>
			<textoffsetx>40</textoffsetx>
			<textoffsety>0</textoffsety>
			<texturenofocus border="21">buttons/button-nofo.png</texturenofocus>
			<animation effect="slide" end="0,-90" time="0" condition="true">Conditional</animation>
			<texturefocus border="21" colordiffuse="$VAR[SkinColorVar]">buttons/button-fo.png</texturefocus>
			<font>font30_title</font>
			<label>$INFO[Window(weather).Property(Map.$PARAM[item_id].Heading)]</label>
			<visible>Weather.IsFetched + !String.IsEmpty(Window(weather).Property(Map.$PARAM[item_id].Area)) + !String.IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</control>
	</include>
	<include name="WidgetListCommon">
		<scrolltime tween="cubic" easing="out">500</scrolltime>
		<orientation>horizontal</orientation>
		<onleft>9000</onleft>
		<onback>9000</onback>
		<onright/>
		<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[list_id],Home)</onfocus>
		<onback>SetFocus($PARAM[list_id],0,absolute)</onback>
		<preloaditems>2</preloaditems>
	</include>
	<include name="BusyListSpinner">
		<param name="posy">160</param>
		<param name="visible">true</param>
		<definition>
			<control type="group" id="$PARAM[list_id]599">
				<height>160</height>
				<left>180</left>
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<visible>$PARAM[visible]</visible>
				<control type="image">
					<top>$PARAM[posy]</top>
					<width>100</width>
					<height>100</height>
					<aspectratio aligny="center">keep</aspectratio>
					<texture colordiffuse="black">dialogs/extendedprogress/loading-back.png</texture>
				</control>
				<control type="image">
					<top>$PARAM[posy]</top>
					<width>100</width>
					<height>100</height>
					<aspectratio aligny="center">keep</aspectratio>
					<texture>dialogs/extendedprogress/loading.png</texture>
					<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
				</control>
			</control>
		</definition>
	</include>
	<include name="WidgetScrollbar">
		<control type="group">
			<right>0</right>
			<top>0</top>
			<bottom>0</bottom>
			<width>60</width>
			<control type="scrollbar" id="$PARAM[scrollbar_id]">
				<right>0</right>
				<top>0</top>
				<bottom>0</bottom>
				<width>13</width>
				<onleft>50</onleft>
				<onright>50</onright>
				<orientation>vertical</orientation>
				<texturesliderbackground />
				<hitrect x="0" y="0" w="60" h="100%" />
				<animation effect="fade" start="0" end="100" time="200" delay="300">Visible</animation>
				<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
				<animation effect="slide" end="6,0" time="300" tween="sine" easing="inout" condition="!Control.HasFocus($PARAM[scrollbar_id])">conditional</animation>
			</control>
		</control>
	</include>
	<include name="WidgetListSquareInfo">
		<param name="visible">true</param>
		<param name="limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<onclick>$PARAM[onclick]</onclick>
				<onclick>$PARAM[onclick2]</onclick>
				<itemlayout width="486.5" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>404</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-musiclayout-nolabel.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>	
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>400</width>
							<height>400</height>
							<texture background="true" fallback="DefaultAudio.png">$INFO[ListItem.Icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>400</width>
							<height>400</height>
							<texture background="true" fallback="DefaultAudio.png">$INFO[ListItem.Icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="group">
							<left>190</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="486.5" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>412</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>412</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>404</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-musiclayout-nolabel.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>400</width>
							<height>400</height>
							<texture background="true" fallback="DefaultAudio.png">$INFO[ListItem.Icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="group">
							<visible>$PARAM[visible_play] + Control.HasFocus($PARAM[list_id])</visible>
							<left>35</left>
							<top>10</top>
							<width>250</width>
							<height>360</height>
							<control type="image">
								<bottom>0</bottom>
								<left>0</left>
								<width>80</width>
								<height>80</height>
								<texture background="true">overlays/overlay-bg.png</texture>
							</control>
							<control type="image">
								<bottom>5</bottom>
								<left>5</left>
								<width>30</width>
								<height>30</height>
								<texture background="true">dialogs/play.png</texture>
							</control>
						</control>
						<control type="group">
							<left>190</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListSongsInfo">
		<param name="visible">true</param>
		<param name="limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<onclick condition="$PARAM[condition]">$PARAM[onclick]</onclick>
				<onclick condition="$PARAM[condition2]">$PARAM[onclick2]</onclick>
				<itemlayout width="430" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>404</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-musiclayout-nolabel.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>	
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>400</width>
							<height>400</height>
							<texture background="true" fallback="DefaultAudio.png">$INFO[ListItem.Icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>400</width>
							<height>400</height>
							<texture background="true" fallback="DefaultAudio.png">$INFO[ListItem.Icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>35</left>
							<top>10</top>
							<width>360</width>
							<height>360</height>
							<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
						</control>
						<control type="label">
							<top>100</top>
							<left>45</left>
							<width>340</width>
							<align>center</align>
							<height>50</height>
							<font>font_MainMenu</font>
							<label>$INFO[ListItem.TrackNumber]</label>
						</control>
						<control type="textbox">
							<top>250</top>
							<left>45</left>
							<width>340</width>
							<align>center</align>
							<height>105</height>
							<font>font25_title</font>
							<label>$INFO[ListItem.Label]</label>
						</control>
						<control type="group">
							<left>190</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="430" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>412</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>412</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>404</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-musiclayout-nolabel.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>400</width>
							<height>400</height>
							<texture background="true" fallback="DefaultAudio.png">$INFO[ListItem.Icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>35</left>
							<top>10</top>
							<width>360</width>
							<height>360</height>
							<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
						</control>
						<control type="label">
							<top>100</top>
							<left>45</left>
							<width>340</width>
							<align>center</align>
							<height>50</height>
							<font>font_MainMenu</font>
							<label>$INFO[ListItem.TrackNumber]</label>
						</control>
						<control type="textbox">
							<top>250</top>
							<left>45</left>
							<width>340</width>
							<align>center</align>
							<height>105</height>
							<font>font25_title</font>
							<label>$INFO[ListItem.Label]</label>
							<autoscroll delay="1000" time="1000" repeat="1000">Control.HasFocus($PARAM[list_id])</autoscroll>
						</control>
						<control type="group">
							<visible>$PARAM[visible_play] + Control.HasFocus($PARAM[list_id])</visible>
							<left>35</left>
							<top>10</top>
							<width>250</width>
							<height>360</height>
							<control type="image">
								<bottom>0</bottom>
								<left>0</left>
								<width>80</width>
								<height>80</height>
								<texture background="true">overlays/overlay-bg.png</texture>
							</control>
							<control type="image">
								<bottom>5</bottom>
								<left>5</left>
								<width>30</width>
								<height>30</height>
								<texture background="true">dialogs/play.png</texture>
							</control>
						</control>
						<control type="group">
							<left>190</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListPosterInfo">
		<param name="visible">true</param>
		<param name="limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<onclick>$PARAM[onclick]</onclick>
				<onclick>$PARAM[onclick2]</onclick>
				<itemlayout width="314" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideo.png">$VAR[IconWallPosterVar]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideo.png">$VAR[IconWallPosterVar]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>35</left>
							<top>290</top>
							<width>80</width>
							<height>80</height>
							<texture>overlays/overlay-bg.png</texture>
							<visible>ListItem.IsResumable | Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
						</control>
						<control type="group">
							<left>135</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="314" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideo.png">$VAR[IconWallPosterVar]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>35</left>
							<top>290</top>
							<width>80</width>
							<height>80</height>
							<texture>overlays/overlay-bg.png</texture>
							<visible>ListItem.IsResumable | Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
						</control>
						<control type="group">
							<visible>$PARAM[visible_play] + Control.HasFocus($PARAM[list_id])</visible>
							<left>35</left>
							<top>10</top>
							<width>250</width>
							<height>360</height>
							<control type="image">
								<bottom>0</bottom>
								<left>0</left>
								<width>80</width>
								<height>80</height>
								<texture background="true">overlays/overlay-bg.png</texture>
							</control>
							<control type="image">
								<bottom>5</bottom>
								<left>5</left>
								<width>30</width>
								<height>30</height>
								<texture background="true">dialogs/play.png</texture>
							</control>
						</control>
						<control type="group">
							<left>135</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListThumbInfo">
		<param name="visible">true</param>
		<param name="limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<param name="visible_play">false</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<onclick>$PARAM[onclick]</onclick>
				<onclick>$PARAM[onclick2]</onclick>
				<itemlayout width="628" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>608</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">colors/white.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>604</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideoFanart.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>604</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideoFanart.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="group">
							<left>292</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="628" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>608</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">colors/white.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>616</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>616</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>604</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideoFanart.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="group">
							<visible>$PARAM[visible_play] + Control.HasFocus($PARAM[list_id])</visible>
							<left>35</left>
							<top>10</top>
							<width>564</width>
							<height>360</height>
							<control type="image">
								<bottom>0</bottom>
								<left>0</left>
								<width>80</width>
								<height>80</height>
								<texture background="true">overlays/overlay-bg.png</texture>
							</control>
							<control type="image">
								<bottom>5</bottom>
								<left>5</left>
								<width>30</width>
								<height>30</height>
								<texture background="true">dialogs/play.png</texture>
							</control>
						</control>
						<control type="group">
							<left>292</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="WidgetListCastInfo">
		<param name="visible">true</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>!String.IsEqual(ListItem.DBType,musicvideo)</visible>
				<visible>!String.IsEmpty(ListItem.DBID)</visible>
				<onfocus>$PARAM[onfocus]</onfocus>
				<visible>$PARAM[visible]</visible>
				<itemlayout width="314" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="group">
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>70</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>97</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label]</label>
								<font>font12</font>
								<textcolor>$VAR[SkinColorVar]</textcolor>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>67</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label2]</label>
								<font>font12</font>
							</control>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="314" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[alt_focus])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[alt_focus])</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[alt_focus])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="group">
							<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[alt_focus])</visible>
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>70</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>97</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label]</label>
								<font>font12</font>
								<textcolor>$VAR[SkinColorVar]</textcolor>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>67</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label2]</label>
								<font>font12</font>
							</control>
						</control>
					</control>
				</focusedlayout>
			</control>
		</definition>
	</include>
	<include name="WidgetListCastPlayerInfo">
		<param name="visible">true</param>
		<param name="limit">$VAR[Label_SkinSetting_WidgetNumber]</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<visible>$PARAM[visible]</visible>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<onclick>noop</onclick>
				<itemlayout width="314" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="group">
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>70</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>97</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label]</label>
								<font>font12</font>
								<textcolor>$VAR[SkinColorVar]</textcolor>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>67</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label2]</label>
								<font>font12</font>
							</control>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="314" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="group">
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>70</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>97</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label]</label>
								<font>font12</font>
								<textcolor>$VAR[SkinColorVar]</textcolor>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>67</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$INFO[ListItem.Label2]</label>
								<font>font12</font>
							</control>
						</control>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>
	<include name="ExtendedInfoCastList">
		<param name="visible_texture">true</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				<onfocus>$PARAM[onfocus]</onfocus>
				<visible>$PARAM[visible]</visible>
				<itemlayout width="314" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="group">
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>70</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
								<visible>$PARAM[visible_texture]</visible>
							</control>
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>40</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
								<visible>$PARAM[visible_texture_small]</visible>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>97</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$PARAM[label]</label>
								<font>font12</font>
								<textcolor>$VAR[SkinColorVar]</textcolor>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>67</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$PARAM[label2]</label>
								<font>font12</font>
							</control>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="314" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[alt_focus])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[alt_focus])</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[alt_focus])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="DefaultActorSolid.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="group">
							<visible>!Control.HasFocus($PARAM[list_id]) + !Control.HasFocus($PARAM[alt_focus])</visible>
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>70</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
								<visible>$PARAM[visible_texture]</visible>
							</control>
							<control type="image">
								<left>35</left>
								<bottom>50</bottom>
								<height>40</height>
								<width>250</width>
								<texture background="true" colordiffuse="BFFFFFFF">colors/black.png</texture>
								<visible>$PARAM[visible_texture_small]</visible>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>97</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$PARAM[label]</label>
								<font>font12</font>
								<textcolor>$VAR[SkinColorVar]</textcolor>
							</control>
							<control type="label">
								<left>50</left>
								<bottom>67</bottom>
								<height>20</height>
								<width>220</width>
								<align>center</align>
								<label>$PARAM[label2]</label>
								<font>font12</font>
							</control>
						</control>
					</control>
				</focusedlayout>
			</control>
		</definition>
	</include>
	<include name="ExtendedInfoPosterList">
		<param name="icon">$VAR[IconWallPosterVar]</param>
		<param name="fallback">DefaultVideo.png</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<onclick>$PARAM[onclick]</onclick>
				<onclick>$PARAM[onclick2]</onclick>
				<visible>$PARAM[visible]</visible>
				<itemlayout width="314" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="$PARAM[fallback]">$PARAM[icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="$PARAM[fallback]">$PARAM[icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>35</left>
							<top>290</top>
							<width>80</width>
							<height>80</height>
							<texture>overlays/overlay-bg.png</texture>
							<visible>ListItem.IsResumable | Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
						</control>
						<control type="group">
							<left>135</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="314" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>302</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>294</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">dialogs/border-movielayout.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>290</width>
							<height>400</height>
							<texture background="true" fallback="$PARAM[fallback]">$PARAM[icon]</texture>
							<aspectratio>stretch</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="image">
							<left>35</left>
							<top>290</top>
							<width>80</width>
							<height>80</height>
							<texture>overlays/overlay-bg.png</texture>
							<visible>ListItem.IsResumable | Listitem.IsCollection | ListItem.IsPlaying | Integer.IsGreater(ListItem.Playcount,0)</visible>
						</control>
						<control type="group">
							<visible>$PARAM[visible_play] + Control.HasFocus($PARAM[list_id])</visible>
							<left>35</left>
							<top>10</top>
							<width>250</width>
							<height>360</height>
							<control type="image">
								<bottom>0</bottom>
								<left>0</left>
								<width>80</width>
								<height>80</height>
								<texture background="true">overlays/overlay-bg.png</texture>
							</control>
							<control type="image">
								<bottom>5</bottom>
								<left>5</left>
								<width>30</width>
								<height>30</height>
								<texture background="true">dialogs/play.png</texture>
							</control>
						</control>
						<control type="group">
							<left>135</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</focusedlayout>
			</control>
		</definition>
	</include>
	<include name="ExtendedInfoThumbList">
		<param name="visible">true</param>
		<param name="visible_play">false</param>
		<definition>
			<control type="list" id="$PARAM[list_id]">
				<left>-23</left>
				<top>0</top>
				<right>0</right>
				<height>430</height>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<onclick>$PARAM[onclick]</onclick>
				<onclick>$PARAM[onclick2]</onclick>
				<visible>$PARAM[visible]</visible>
				<itemlayout width="628" height="430">
					<control type="group">
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>608</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">colors/white.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>604</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideoFanart.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>604</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideoFanart.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>!Skin.HasSetting(show_borders)</visible>
						</control>
						<control type="group">
							<left>292</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout width="628" height="430">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>68</left>
						<top>10</top>
						<control type="image">
							<left>13</left>
							<top>-12</top>
							<width>608</width>
							<height>404</height>
							<texture colordiffuse="$VAR[BorderColorVar]">colors/white.png</texture>
							<aspectratio>stretch</aspectratio>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(show_borders)</visible>
							<visible>!Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>616</width>
							<height>412</height>
							<texture colordiffuse="$VAR[SkinColorVar]">colors/grey.png</texture>
							<bordertexture border="21">overlays/shadow.png</bordertexture>
							<bordersize>20</bordersize>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>9</left>
							<top>-16</top>
							<width>616</width>
							<height>412</height>
							<texture colordiffuse="$VAR[GradientColorVar]">colors/gradient.png</texture>
							<bordersize>20</bordersize>
							<visible>Skin.HasSetting(EnableGradientColor)</visible>
							<visible>Control.HasFocus($PARAM[list_id])</visible>
						</control>
						<control type="image">
							<left>15</left>
							<top>-10</top>
							<width>604</width>
							<height>400</height>
							<texture background="true" fallback="DefaultVideoFanart.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio aligny="center" align="center">scale</aspectratio>
							<bordersize>20</bordersize>
						</control>
						<control type="group">
							<visible>$PARAM[visible_play] + Control.HasFocus($PARAM[list_id])</visible>
							<left>35</left>
							<top>10</top>
							<width>564</width>
							<height>360</height>
							<control type="image">
								<bottom>0</bottom>
								<left>0</left>
								<width>80</width>
								<height>80</height>
								<texture background="true">overlays/overlay-bg.png</texture>
							</control>
							<control type="image">
								<bottom>5</bottom>
								<left>5</left>
								<width>30</width>
								<height>30</height>
								<texture background="true">dialogs/play.png</texture>
							</control>
						</control>
						<control type="group">
							<left>292</left>
							<top>-9</top>
							<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating) | Skin.HasSetting(circle_bothrating)">RatingCircle</include>
						</control>
					</control>
				</focusedlayout>
			</control>
		</definition>
	</include>
</includes>
